---
- name: 1.0 RENDER AND DISPLAY THE IP, ISIS & LDP CONFIGURATION
  debug:
    msg:
    - "template: {{ templates[0] }}"
    - "{{ lookup('template', templates[0]).split('\n') }}"

- name: 1.1 RENDER AND SAVE THE IP, ISIS & LDP CONFIGURATION
  template:
    src: "{{ templates[0] }}"
    dest: "xrcfg/{{ hostname }}.ip_mpls.xrcfg"
  register: output

- name: "{{ slow_secs }} secs PAUSE FOR CONVERGENCE"
  ansible.builtin.pause:
    seconds: "{{ slow_secs }}"

- name: 1.2 DISPLAY THE OUTPUT REGISTERED IN THE PREVIOUS TASK
  debug:
    var: output.dest

- name: 1.3 RENDER AND APPLY THE IP, ISIS & LDP CONFIGURATION
  cisco.iosxr.iosxr_config:
    src: "{{ templates[0] }}"
    match: none

- name: "{{ mins }} mins PAUSE FOR CONVERGENCE"
  ansible.builtin.pause:
    minutes: "{{ mins }}"

- name: 1.4 RUN COMMANDS TO CAPTURE IP, ISIS & LDP STATE
  cisco.iosxr.iosxr_command:
    commands: 
    - "{{ item }}"
  loop: "{{ command_set_1 }}"
  when: hostname == "PE1"
  register: output

- name: 1.5 DISPLAY THE OUTPUT REGISTERED IN THE PREVIOUS TASK
  debug:
    msg:
    - "{{ output.results[idx].stdout_lines }}"
  loop: "{{ command_set_1 }}"
  loop_control:
    index_var: idx
  when: hostname == "PE1"

- name: 1.6 RUN COMMANDS TO TRACE LABELS FROM PE1 TO PE5
  cisco.iosxr.iosxr_command:
    commands:
    - show mpls forwarding prefix 5.5.5.5/32
  when: inventory_hostname == "PE1" or hostname == "P2" or hostname == "P3" or hostname == "P7" or hostname == "P4" 
  register: output
